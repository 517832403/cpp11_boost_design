#import path ;
import os ;
path-constant BOOST_ROOT : [ os.environ BOOST_ROOT ] ;
path-constant CWD : . ;

project 
	: requirements
	  <implicit-dependency>/boost//headers
	  <debug-symbols>on
	  <cxxflags>-std=c++11
	: default-build 
           debug
	  <link>shared
	  <threading>multi
	: build-dir bin
	;

use-project /boost : $(BOOST_ROOT) ;
alias dependencies
	: /boost/filesystem//boost_filesystem
	  /boost/thread//boost_thread
	  /boost/locale//boost_locale
	  /boost/regex//boost_regex
	  /boost/system//boost_system
	;
	  
exe write_json_array
	: $(CWD)/src/write_json_array.cpp
	  dependencies
	: <implicit-dependency>/boost//headers
	  <debug-symbols>on
	;


exe directory
	: $(CWD)/src/test_directory.cpp
	  dependencies
	: <include>$(CWD)/
	  <threading>multi
	  <implicit-dependency>/boost//headers
	  <debug-symbols>on
	: <include>$(CWD)/
	;

exe exe_path
	: $(CWD)/src/test_exe_path.cpp
	  dependencies
	: <implicit-dependency>/boost//headers
	  <debug-symbols>on
	  <threading>multi
	: <include>$(CWD)/include/
	;

# [ glob-tree *.cpp : unittest ]
# [ glob-tree common.so external.so internal.so ]	
exe regex
	: $(CWD)/src/regex.cpp
	  dependencies
	: <threading>multi
	  <implicit-dependency>/boost//headers
   	  <debug-symbols>on
	: <library>dependencies
	;

exe boost_pp
        : $(CWD)/src/boost_pp.cpp
          dependencies
        : <threading>multi
          <implicit-dependency>/boost//headers
          <debug-symbols>on
        : <library>dependencies
        ;

exe async_connect
	: $(CWD)/src/async_connect.cpp
		dependencies
	: <threading>multi
	  <implicit-dependency>/boost//headers
	  <debug-symbols>on
	: <library>dependencies
	;

